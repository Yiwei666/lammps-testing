LAMMPS (2 Aug 2023 - Development - bc02a7cc6)
# This example demonstrates the use of various fix qeq variants with pair reax/c
# You can comment in/out various versions below
#
# 1) Fix qeq/shielded generates the same results compared to fix qeq/reax when
#    used with pair_style reax/c, provided that the QEq parameters are the same.
#
# 2) Fix qeq/point and fix qeq/dynamic generate comparable results provided that
#    the QEq parameters are the same.  These two styles can also be used with
#    pair_style reax/c.

units		real
atom_style	charge

read_data	data.CHO
Reading data file ...
  orthogonal box = (0 0 0) to (25 25 25)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  105 atoms
  read_data CPU = 0.007 seconds

pair_style	reax/c NULL checkqeq no
pair_coeff	* * ffield.reax.cho H C O
Reading potential file ffield.reax.cho with DATE: 2011-02-18

neighbor	1 bin
neigh_modify	every 1 delay 0 check yes

group    	type1 type 1
60 atoms in group type1
compute   	charge1 type1 property/atom q
compute   	q1 type1 reduce ave c_charge1
group    	type2 type 2
25 atoms in group type2
compute   	charge2 type2 property/atom q
compute   	q2 type2 reduce ave c_charge2
group    	type3 type 3
20 atoms in group type3
compute   	charge3 type3 property/atom q
compute   	q3 type3 reduce ave c_charge3
variable   	qtot equal count(type1)*c_q1+count(type2)*c_q2+count(type3)*c_q3

thermo_style  	custom step pe c_q1 c_q2 c_q3 v_qtot
thermo     	1

velocity  	all create 300.0 1281937
fix		1 all nve

fix             2 all qeq/reax 1 0.0 10.0 1e-6 param.qeq.reax
#fix             2 all qeq/shielded 1 10.0 1e-6 400 param.qeq1
#fix             2 all qeq/point 1 10.0 1e-6 400 param.qeq1
#fix             2 all qeq/dynamic 1 10.0 1e-3 100 param.qeq1

timestep	0.25

run		10

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 11
  ghost atom cutoff = 11
  binsize = 5.5, bins = 5 5 5
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 8.356 | 9.251 | 10.33 Mbytes
   Step         PotEng          c_q1           c_q2           c_q3          v_qtot    
         0  -10226.557      0.095634063   -0.15658793    -0.091167274    4.4408921e-16
         1  -10225.799      0.095649716   -0.15662235    -0.091171214   -4.4408921e-16
         2  -10223.656      0.095669676   -0.15666693    -0.09117536     4.4408921e-16
         3  -10220.276      0.095691279   -0.15671606    -0.091178763   -1.110223e-15 
         4  -10215.894      0.095714209   -0.15676858    -0.091181904    0            
         5  -10210.804      0.095734038   -0.15681433    -0.091184202    1.7763568e-15
         6  -10205.342      0.095751518   -0.15685506    -0.091185732    1.3322676e-15
         7  -10199.848      0.095762012   -0.1568795     -0.091186659   -6.6613381e-16
         8  -10194.646      0.095766997   -0.15689131    -0.09118686    -8.8817842e-16
         9  -10190.016      0.09576035    -0.15687645    -0.091185492    2.8865799e-15
        10  -10186.168      0.095748197   -0.15684857    -0.091183879   -2.6645353e-15
Loop time of 0.0241301 on 8 procs for 10 steps with 105 atoms

Performance: 8.951 ns/day, 2.681 hours/ns, 414.420 timesteps/s, 43.514 katom-step/s
98.5% CPU use with 8 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.0057959  | 0.0075273  | 0.0098041  |   1.7 | 31.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.00045746 | 0.0027307  | 0.0044505  |   2.7 | 11.32
Output  | 0.00097099 | 0.001006   | 0.0011873  |   0.2 |  4.17
Modify  | 0.012573   | 0.01259    | 0.012604   |   0.0 | 52.17
Other   |            | 0.0002762  |            |       |  1.14

Nlocal:         13.125 ave          31 max           2 min
Histogram: 2 1 2 0 0 1 0 1 0 1
Nghost:        216.625 ave         307 max         137 min
Histogram: 2 0 0 0 4 0 0 0 0 2
Neighs:          525.5 ave        1380 max          48 min
Histogram: 2 2 1 0 0 1 0 1 0 1

Total # of neighbors = 4204
Ave neighs/atom = 40.038095
Neighbor list builds = 0
Dangerous builds = 0
Total wall time: 0:00:00
